{
	"compiler": {
		"version": "0.7.5+commit.eb77ed08"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_OHM",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_principle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasury",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_DAO",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_bondCalculator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "expires",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "priceInUSD",
						"type": "uint256"
					}
				],
				"name": "BondCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "priceInUSD",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "internalPrice",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "debtRatio",
						"type": "uint256"
					}
				],
				"name": "BondPriceChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "remaining",
						"type": "uint256"
					}
				],
				"name": "BondRedeemed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "initialBCV",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBCV",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "adjustment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "addition",
						"type": "bool"
					}
				],
				"name": "ControlVariableAdjustment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipPulled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipPushed",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DAO",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "OHM",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adjustment",
				"outputs": [
					{
						"internalType": "bool",
						"name": "add",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "rate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "target",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "buffer",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastBlock",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bondCalculator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "bondInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "vesting",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pricePaid",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bondPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bondPriceInUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentDebt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "debtDecay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "decay_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "debtRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "debtRatio_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxPrice",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_depositor",
						"type": "address"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_controlVariable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_vestingTerm",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_minimumPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxPayout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxDebt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_initialDebt",
						"type": "uint256"
					}
				],
				"name": "initializeBondTerms",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isLiquidityBond",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastDecay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxPayout",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "payoutFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_depositor",
						"type": "address"
					}
				],
				"name": "pendingPayoutFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "pendingPayout_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_depositor",
						"type": "address"
					}
				],
				"name": "percentVestedFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "percentVested_",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "policy",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "principle",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pullManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner_",
						"type": "address"
					}
				],
				"name": "pushManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "recoverLostToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_stake",
						"type": "bool"
					}
				],
				"name": "redeem",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_addition",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_increment",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_target",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_buffer",
						"type": "uint256"
					}
				],
				"name": "setAdjustment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum OlympusBondDepository.PARAMETER",
						"name": "_parameter",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "_input",
						"type": "uint256"
					}
				],
				"name": "setBondTerms",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_staking",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_helper",
						"type": "bool"
					}
				],
				"name": "setStaking",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "staking",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakingHelper",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "standardizedDebtRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "terms",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "controlVariable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "vestingTerm",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minimumPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxPayout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxDebt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDebt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treasury",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "useHelper",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"bondPrice()": {
					"returns": {
						"price_": "uint"
					}
				},
				"bondPriceInUSD()": {
					"returns": {
						"price_": "uint"
					}
				},
				"currentDebt()": {
					"returns": {
						"_0": "uint"
					}
				},
				"debtDecay()": {
					"returns": {
						"decay_": "uint"
					}
				},
				"debtRatio()": {
					"returns": {
						"debtRatio_": "uint"
					}
				},
				"deposit(uint256,uint256,address)": {
					"params": {
						"_amount": "uint",
						"_depositor": "address",
						"_maxPrice": "uint"
					},
					"returns": {
						"_0": "uint"
					}
				},
				"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
					"params": {
						"_controlVariable": "uint",
						"_fee": "uint",
						"_initialDebt": "uint",
						"_maxDebt": "uint",
						"_maxPayout": "uint",
						"_minimumPrice": "uint",
						"_vestingTerm": "uint"
					}
				},
				"maxPayout()": {
					"returns": {
						"_0": "uint"
					}
				},
				"payoutFor(uint256)": {
					"params": {
						"_value": "uint"
					},
					"returns": {
						"_0": "uint"
					}
				},
				"pendingPayoutFor(address)": {
					"params": {
						"_depositor": "address"
					},
					"returns": {
						"pendingPayout_": "uint"
					}
				},
				"percentVestedFor(address)": {
					"params": {
						"_depositor": "address"
					},
					"returns": {
						"percentVested_": "uint"
					}
				},
				"recoverLostToken(address)": {
					"returns": {
						"_0": "bool"
					}
				},
				"redeem(address,bool)": {
					"params": {
						"_recipient": "address",
						"_stake": "bool"
					},
					"returns": {
						"_0": "uint"
					}
				},
				"setAdjustment(bool,uint256,uint256,uint256)": {
					"params": {
						"_addition": "bool",
						"_buffer": "uint",
						"_increment": "uint",
						"_target": "uint"
					}
				},
				"setBondTerms(uint8,uint256)": {
					"params": {
						"_input": "uint",
						"_parameter": "PARAMETER"
					}
				},
				"setStaking(address,bool)": {
					"params": {
						"_helper": "bool",
						"_staking": "address"
					}
				},
				"standardizedDebtRatio()": {
					"returns": {
						"_0": "uint"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"bondPrice()": {
					"notice": "calculate current bond premium"
				},
				"bondPriceInUSD()": {
					"notice": "converts bond price to DAI value"
				},
				"currentDebt()": {
					"notice": "calculate debt factoring in decay"
				},
				"debtDecay()": {
					"notice": "amount to decay total debt by"
				},
				"debtRatio()": {
					"notice": "calculate current ratio of debt to OHM supply"
				},
				"deposit(uint256,uint256,address)": {
					"notice": "deposit bond"
				},
				"initializeBondTerms(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
					"notice": "initializes bond parameters"
				},
				"maxPayout()": {
					"notice": "determine maximum bond size"
				},
				"payoutFor(uint256)": {
					"notice": "calculate interest due for new bond"
				},
				"pendingPayoutFor(address)": {
					"notice": "calculate amount of OHM available for claim by depositor"
				},
				"percentVestedFor(address)": {
					"notice": "calculate how far into vesting a depositor is"
				},
				"recoverLostToken(address)": {
					"notice": "allow anyone to send lost tokens (excluding principle or OHM) to the DAO"
				},
				"redeem(address,bool)": {
					"notice": "redeem bond for user"
				},
				"setAdjustment(bool,uint256,uint256,uint256)": {
					"notice": "set control variable adjustment"
				},
				"setBondTerms(uint8,uint256)": {
					"notice": "set parameters for new bonds"
				},
				"setStaking(address,bool)": {
					"notice": "set contract for auto stake"
				},
				"standardizedDebtRatio()": {
					"notice": "debt ratio in same terms for reserve or liquidity bonds"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/BondDepository.sol": "OlympusBondDepository"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/Address.sol": {
			"keccak256": "0x6d6fa4aa1f02e16366ada8dec2b5f0fd16be321b642d81963d44cc17043bea48",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://159f3648f5e5b8940ccc9e69dd32d0f491faa399d71da02f5750979a5777ec04",
				"dweb:/ipfs/QmUz4B7Veu4mAHcpWkHARJVCxS6Xp5SBairJA284u2kNZu"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/BondDepository.sol": {
			"keccak256": "0x40af3ee297a169c83535d3266652115eec0013a27d5be40c27ba59c30d721cef",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://589f19341cbb42d0f0cd18d71a3253aa5e396f139b7fe6b8253890439298ba0a",
				"dweb:/ipfs/QmYKihyyS7zKLGhwSZrW8bGVk2qDv8vocmAfdZwZRiYWGd"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/FixedPoint.sol": {
			"keccak256": "0x219e8e249cd2136695b0c56436c2565b695f808f39f3cad1ebffb04e8f0b1998",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://86629570690c1eb1f2ca60bfa6f3548e1762bbc652489d89b96b7f4af1772267",
				"dweb:/ipfs/QmeojTRVaQKB31AohKGgM9KiyvV1r3KyfUrK3MdUjmQCUF"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/FullMath.sol": {
			"keccak256": "0xf3358a9c5c802f15e8199f18f5fad9f8472c74d20f21faf3cc0da5c22a16b019",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://8436852c70e6f0094bbd2e4dba3901bbb0cdac4fc94bca34296e11b9074354c7",
				"dweb:/ipfs/Qmbez2M2oWBwXuNJtwZQ6An2HpjMWR2kZCPThv54tvynHX"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/IBondCalculator.sol": {
			"keccak256": "0xa6ef890d1a168515e6eb90d17f79ea7d124eddc3041873b47d80c94fd27759c6",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://1f07872de6a2759bdb1ca963c9061efcad4068a40ed0fdfb2030085ab2ce8e77",
				"dweb:/ipfs/QmUgNXhES6LvgSSp7kLRgt2TBVTzjn6VZbqyswaKKJJr1t"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/IERC20.sol": {
			"keccak256": "0xadd81a449948f7b07ee3d96471d11f545a753380fad6625a9486f9f2c7328860",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://66a8b09ab70ce44028f98e84da7a360d0854b976211ad1818589b3ebcf42bb5b",
				"dweb:/ipfs/QmNM4HxEvvqocVcRb537ojg2iXFmEgrFVcg6XFJZiw9sCZ"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/IOwnable.sol": {
			"keccak256": "0x40951fa30cc49c05c5548753fd97a0c884145a815e8ee7775c2882d2a54c6627",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://c86fd97c4dff04187731060fda806d0b54c7d414f6905080944bf41d852b98e6",
				"dweb:/ipfs/QmdWNX23iXSTrezhHfNefLSNWQz1mfbLFqvKNNJ3PMNE5q"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/IStaking.sol": {
			"keccak256": "0x01eef61799f5e1e3ac2463683fe4934137b027b8d84db40cd6cd19008d2de5b4",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://1b1d6e24b18828eff0208e4f9062028c97eccc4bec6208c6da79a77286d60446",
				"dweb:/ipfs/QmXss6Awq5jQ4XAcUG4863ZnXJUEgxotytzwM7P5YaTf9U"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/IStakingHelper.sol": {
			"keccak256": "0x0525c73f5567f4bc5b387962999eb3c6a6ee7a28b0ca3b26f0d7053005b54425",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://8df4b2e84cba99a28ee1c3883b73c4da21841b10146c962763314b522b641015",
				"dweb:/ipfs/QmPrU5N32Zxbm5Wya1Mfy8yzjkeCdCxmgu3dP1dnFfX5PK"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/ITreasury.sol": {
			"keccak256": "0xdb9e01400915ab1245045b12544e6cc0370baa285ab083caf9efd89e40a07d2e",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://6a21841812c6e70e8fc524e34339e68d4a5c6306616609c1fa5e91d5e4b259a6",
				"dweb:/ipfs/QmWVPT59e8dTtmLiGwMLGWfyEAAzHePyHw1CCj7se6oKL1"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/Ownable.sol": {
			"keccak256": "0x9e8c84b43d64b9bf495ff24b47535bf922589f6ae6ddcab9d7006bb7b05a8a81",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://001772317739daa5015496a8a01eba5ce6f9429cca9be65f1c585d3ac5852482",
				"dweb:/ipfs/QmSV15r34DxXvwvmH1tr6VaZev1UsiPrVYvsdN1wwTXYM3"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/SafeERC20.sol": {
			"keccak256": "0x026b30810325ff1d06ddd71fb097a9f4633a6ab1bb491662e6f70bad0efaff19",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://8d3942e4f90dce881e555ba9d1b8f96c8b2b2cf783d87ba257a6dee7c1bc3915",
				"dweb:/ipfs/QmUK2zSbXozMLPr6VpARfeSfRu16RPzFHiPmkSN1x3dfB2"
			]
		},
		"smart_contracts/BUSD Bond : LP Bond - OlympusBondDepository/SafeMath.sol": {
			"keccak256": "0x59defb86e464ab485477bdac212ce08c5142f7d4643d7f7fce9d0b674f1dec6c",
			"license": "AGPL-3.0-or-later",
			"urls": [
				"bzz-raw://0ef51edfff3d7db2373d11d6310be833aed382052a7972e859434e5dd449a5c2",
				"dweb:/ipfs/QmPxC2Ud688GZTbMf5S1JWqnSaEzjH9Q2gU8WqViUFZYt4"
			]
		}
	},
	"version": 1
}